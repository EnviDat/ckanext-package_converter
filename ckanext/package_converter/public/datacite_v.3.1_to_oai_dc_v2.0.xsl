<?xml version="1.0" encoding="ISO-8859-1"?>
<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:d="http://datacite.org/schema/kernel-3"
	xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:my="http://tempuri.org/dummy" 
	exclude-result-prefixes="d my">
	
	<!-- Project: Envidat Author: Lucia Espona, WSL, 27.01.2016 Filename: datacite_v.3.1_to_dublin_core_v1.1.xsl 
		Version: 1.0 Purpose: Transforms a Data Cite Version 3.1 xml to a Dublin 
		Core v1.1 xml. Creative Commons: CC BY, License Deed: http://creativecommons.org/licenses/by/4.0/, 
		Legal Code: http://creativecommons.org/licenses/by/4.0/legalcode NOTE: .. -->

	<xsl:output method="xml" encoding="UTF-8" indent="yes" />
	<xsl:strip-space elements="*" />

	<xsl:variable name="doi_prefix">doi:</xsl:variable>
	<xsl:variable name="doi_postfix"> / doi</xsl:variable>
	<xsl:variable name="envidat_url">http://www.envidat.ch/catalogue/</xsl:variable>
	<xsl:variable name="default_resource_type_general">Dataset</xsl:variable>
	
	<xsl:template match="/">
<!-- 		<xsl:comment> -->
<!-- 			This xml document was generated by the XSL Transformer datacite_v.3.1_to_dublin_core_v1.1.xsl at -->
<!--  			<xsl:value-of select="current-dateTime()" /> --> 
<!-- 		</xsl:comment> -->
<!-- 		<xsl:comment> -->
<!-- 			The ENVIDAT Project - An Environmental Data Centre - Developed by -->
<!-- 			Swiss Federal Institute for Forest, Snow and -->
<!-- 			Landscape Research WSL -->
<!-- 		</xsl:comment> -->
			<oai_dc:dc
				xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" 
				xmlns:dc="http://purl.org/dc/elements/1.1/" 
				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
				xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/  http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
<!--			<oai_dc:dc xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/ http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd" xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" > -->
				<!-- 1. IDENTIFIER: 2-n, DOI and Landing Page -->
				<!-- 1.1 DOI: "doi:10.xxx/yyyy / doi" -->
				<!-- 1.1 DOI: "10.xxx/yyyy" -->
				<dc:identifier><xsl:value-of select="d:resource/d:identifier[@identifierType='DOI']" /></dc:identifier>
				<!-- 1.2 Landing Page URI -->
				<dc:identifier><xsl:value-of select="d:resource/d:alternateIdentifiers/d:alternateIdentifier[@alternateIdentifierType='URL']" /></dc:identifier>				
				
				<xsl:apply-templates />
				
			</oai_dc:dc>

<!-- 		</metadata> -->
	</xsl:template>

	<xsl:template match="d:resource">

		<!-- 2. CREATOR: 1-N -->
		<xsl:for-each select="d:creators/d:creator">
			<dc:creator>
				<xsl:value-of select="d:creatorName" />
			</dc:creator>
		</xsl:for-each>

		<!-- 3. TITLE: 1-N -->
		<xsl:for-each select="d:titles/d:title">
			<dc:title>
				<xsl:value-of select="." />
			</dc:title>
		</xsl:for-each>

		<!-- 4. PUBLISHER: 1 -->
		<dc:publisher>
			<xsl:value-of select="d:publisher" />
		</dc:publisher>

		<!-- 5. DATE -->
		<!-- 5.1 Publication Year: 1 -->
		<dc:date>
			<xsl:value-of select="d:publicationYear" />
		</dc:date>

		<!-- 5.2 Other Dates: 0-n, YYYY, YYYY-MM, YYYY-MM-DD, RKMS-ISO8601 (ex. 
			2004-03-02/2005-06-02) (?)DateType -->
		<xsl:for-each select="d:dates/d:date">
			<dc:date>
				<xsl:value-of select="." />
			</dc:date>
		</xsl:for-each>

		<!-- 6. TYPE -->
		<!-- 6.1 Resource Type General: 1 (DataCite CV) -->

		<xsl:choose>
			<xsl:when test="not(d:resourceType)">
				<dc:type>
					<xsl:value-of select="$default_resource_type_general" />
				</dc:type>
			</xsl:when>
			<xsl:when test="d:resourceType/@resourceTypeGeneral = ''">
				<dc:type>
					<xsl:value-of select="$default_resource_type_general" />
				</dc:type>
			</xsl:when>
			<xsl:when test="d:resourceType[not(@resourceTypeGeneral)] ">
				<dc:type>
					<xsl:value-of select="$default_resource_type_general" />
				</dc:type>
			</xsl:when>
			<xsl:otherwise>
				<dc:type>
					<xsl:value-of select="d:resourceType/@resourceTypeGeneral" />
				</dc:type>
			</xsl:otherwise>
		</xsl:choose>

		<!-- 6.2 Resource Type: 0-1 -->
		<xsl:if test="d:resourceType">
			<dc:type>
				<xsl:value-of select="d:resourceType" />
			</dc:type>
		</xsl:if>

		<!-- 7. SUBJECT : 0-N -->
		<xsl:for-each select="d:subjects/d:subject">
			<dc:subject>
				<xsl:value-of select="." />
			</dc:subject>
		</xsl:for-each>

		<!-- 8.CONTRIBUTOR : 0-N -->
		<xsl:for-each select="d:contributors/d:contributor">
			<dc:contributor>
				<xsl:value-of select="d:contributorName" />
			</dc:contributor>
		</xsl:for-each>

		<!-- 9. LANGUAGE: 0-N, "xxx"(ex. eng, ger) -->
 		<dc:language>
 				<xsl:value-of select="d:language" />
<!-- 				<xsl:call-template name="matchLanguage">	 -->
<!-- 					<xsl:with-param name="language" select="d:language"/> -->
<!-- 				</xsl:call-template> -->
 		</dc:language>

		<!-- 10. FORMAT: 0-N -->
		<!-- 10.1 Size: 0-N -->
		<xsl:for-each select="d:sizes/d:size">
			<dc:format>
				<xsl:value-of select="." />
			</dc:format>
		</xsl:for-each>
		<!-- 10.2 Format: 0-N -->
		<xsl:for-each select="d:formats/d:format">
			<dc:format>
				<xsl:value-of select="." />
			</dc:format>
		</xsl:for-each>

		<!-- 11. RIGHTS: 0-N -->
		<xsl:for-each select="d:rightsList/d:rights">
			<dc:rights>
				<xsl:value-of select="." />
			</dc:rights>
		</xsl:for-each>

		<!-- 12. DESCRIPTION: 0-N -->
<!-- 		<xsl:for-each select="d:descriptions/d:description">
			<dc:description>
				<xsl:value-of select="." />
			</dc:description>
		</xsl:for-each> -->

		<!-- NOT MAPPED TO DATACITE BY ETHZ-DOI DESK -->
		<!-- <dc:source></dc:source> -->
		<!-- <dc:relation></dc:relation> -->
		<!-- <dc:coverage></dc:coverage> -->


	</xsl:template>

</xsl:stylesheet>
